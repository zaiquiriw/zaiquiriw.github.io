{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Testing/","text":"Just Updating the Repo \u00b6 Just got to keep editing this so the push goes through.","title":"Just Updating the Repo"},{"location":"Testing/#just-updating-the-repo","text":"Just got to keep editing this so the push goes through.","title":"Just Updating the Repo"},{"location":"digilog/digilog-lec-4/","text":"Lecture 4: Logic Gates \u00b6 Howdy I recently set up github pages publishing so I can host my notes. I\u2019m doing it mostly for Machine Learning . These notes continue from digilog-lec-3 Truth Tables \u00b6 # AND OR NOT 00 0 0 11 01 0 1 10 10 0 1 01 11 1 1 00 Multiple Variables and Mixed Gates \u00b6 There is a way to simplify the study of logic gates, in general using Boolean algebra. If we wanted to study the function: \\( \\(F(X,Y,Z) = X Y + \\overline Y Z\\) \\) Latex Come On (Blame Mathjax) Well it looks like I can\u2019t make the bar look good in minimal clicks\u2026 stackoverflow Waveform Behavior View \u00b6 Example \u00b6 We can use a truth table to decide how the behavior of this algorithm works, but we can really just use some sort of algebraic function to determine this. For one, we could find an expression for each scenario: The Light is On If: A and C are closed, OR B And C are closed Or A and B and C are closed \\(L = A\\cdot C + B \\cdot C + A \\cdot B \\cdot C\\) We need 6 gates for this at first (AND, OR, AND, OR, AND, AND) We need less though, optimized it is just \\(C\\cdot (A + B)\\) . The truth table should give the same behavior. Combinational Circuits \u00b6 Logic functions like described before are implemented using circuits composed of: Items: An item is a circuit which implements some logical function Nodes: A node is a connection or wire that connects to external input, output, or between inner items There are two classes of digital logic circuits: Combinational Circuits: the output depends only on the current values of the input (memoryless) TODO: Sequential Circuits: Idk I was on discord Below is an anki example, just for showing off how the export to anki works Q: What is an Item in Combinational Circuits A: An item in a circuit which implements some logical function Combinational circuits must meet three conditions Every circuit element is itself combinational (which means those logic thingies lol) Every node of the circuit is either designated as an input to the circuit or connects to exactly one output terminal of a circuit element The circuit contains no cyclic paths, every path through the circuit visits each circuit node at most once. Boolean Algebra \u00b6 We have the ability to hold the values of 1 and 0 as True and False, and can use AND, OR, and NOT. Order Precedence \u00b6 Parenthesis Not AND OR Example: \\( \\(\\bar X + Y \\cdot Z\\) \\) Boolean Expression \u00b6 Boolean expressions are formed by applying operators to Boolean variables. They can be represented by equations, logic gate diagrams, and a truth table. Duality of Boolean Expressions \u00b6 The dual of an algebraic expression is obtained by interchanging + and \\(\\cdot\\) and interchanging 0\u2019s and 1\u2019s. This is the definition then of the dual . Note that when you do this, you preserve the order of operations from the original.","title":"Lecture 4: Logic Gates"},{"location":"digilog/digilog-lec-4/#lecture-4-logic-gates","text":"Howdy I recently set up github pages publishing so I can host my notes. I\u2019m doing it mostly for Machine Learning . These notes continue from digilog-lec-3","title":"Lecture 4: Logic Gates"},{"location":"digilog/digilog-lec-4/#truth-tables","text":"# AND OR NOT 00 0 0 11 01 0 1 10 10 0 1 01 11 1 1 00","title":"Truth Tables"},{"location":"digilog/digilog-lec-4/#multiple-variables-and-mixed-gates","text":"There is a way to simplify the study of logic gates, in general using Boolean algebra. If we wanted to study the function: \\( \\(F(X,Y,Z) = X Y + \\overline Y Z\\) \\) Latex Come On (Blame Mathjax) Well it looks like I can\u2019t make the bar look good in minimal clicks\u2026 stackoverflow","title":"Multiple Variables and Mixed Gates"},{"location":"digilog/digilog-lec-4/#waveform-behavior-view","text":"","title":"Waveform Behavior View"},{"location":"digilog/digilog-lec-4/#example","text":"We can use a truth table to decide how the behavior of this algorithm works, but we can really just use some sort of algebraic function to determine this. For one, we could find an expression for each scenario: The Light is On If: A and C are closed, OR B And C are closed Or A and B and C are closed \\(L = A\\cdot C + B \\cdot C + A \\cdot B \\cdot C\\) We need 6 gates for this at first (AND, OR, AND, OR, AND, AND) We need less though, optimized it is just \\(C\\cdot (A + B)\\) . The truth table should give the same behavior.","title":"Example"},{"location":"digilog/digilog-lec-4/#combinational-circuits","text":"Logic functions like described before are implemented using circuits composed of: Items: An item is a circuit which implements some logical function Nodes: A node is a connection or wire that connects to external input, output, or between inner items There are two classes of digital logic circuits: Combinational Circuits: the output depends only on the current values of the input (memoryless) TODO: Sequential Circuits: Idk I was on discord Below is an anki example, just for showing off how the export to anki works Q: What is an Item in Combinational Circuits A: An item in a circuit which implements some logical function Combinational circuits must meet three conditions Every circuit element is itself combinational (which means those logic thingies lol) Every node of the circuit is either designated as an input to the circuit or connects to exactly one output terminal of a circuit element The circuit contains no cyclic paths, every path through the circuit visits each circuit node at most once.","title":"Combinational Circuits"},{"location":"digilog/digilog-lec-4/#boolean-algebra","text":"We have the ability to hold the values of 1 and 0 as True and False, and can use AND, OR, and NOT.","title":"Boolean Algebra"},{"location":"digilog/digilog-lec-4/#order-precedence","text":"Parenthesis Not AND OR Example: \\( \\(\\bar X + Y \\cdot Z\\) \\)","title":"Order Precedence"},{"location":"digilog/digilog-lec-4/#boolean-expression","text":"Boolean expressions are formed by applying operators to Boolean variables. They can be represented by equations, logic gate diagrams, and a truth table.","title":"Boolean Expression"},{"location":"digilog/digilog-lec-4/#duality-of-boolean-expressions","text":"The dual of an algebraic expression is obtained by interchanging + and \\(\\cdot\\) and interchanging 0\u2019s and 1\u2019s. This is the definition then of the dual . Note that when you do this, you preserve the order of operations from the original.","title":"Duality of Boolean Expressions"},{"location":"hidden/ml02-learning-r/","text":"2: Learning R \u00b6 Links Youtube Video Github R Homepage TLDR; \u00b6 Setting Up R \u00b6 Head to R Homepage to get a little background about R. An Open source alternative to the S langauge developed at Bell Labs. Click on CRAN I used this mirror Run the installer for your system Installed at C:\\Program Files\\R\\R-4.2.1 Used Defaults Then download RStudio and open it (She was specific that it was in this order) Installed at C:\\Program Files\\RStudio Open the software and get ready to go! Using RStudio \u00b6 This section uses Chapter 2 of \u201cMachine Learning Handbook: Using R and Python\u201d, the chapter can be found at http://karenmazidi.blogspot.com/ , however I am going to get the book real fast\u2026 I went ahead and bought the paper back! R is an interpreted language, which means we can easily get to know it in the console. Fast Track on Typing \u00b6 3 + 4 - 1 * 8 / 2 [ 1 ] 3 # Output While it does follow the normal order of operations, and returns as expected, note that that [1] is telling you the dimension of what is returned. There aren\u2019t Scalars in R, and the 3 returned is just a vector of length 1 If we were to save the result to a variable (note the assignment operator is commonly <- ) we would see it in the environment tab. The Assignment operator could be = , but <- is preferred. She notes assignment is bidirectional but I\u2019m not sure what that means, check here . x <- 3 + 4 - 1 * 8 / 2 [ 1 ] 3 # Output In the environment we can now see x , and it looks like an integer. But if we use the type of function typeof ( x ) [ 1 ] \"double\" # Output We can see that numbers are by default stored as doubles. We can instead store things as an integer using L : x <- c ( 1L , 2L , 3L ) typeof ( x ) [ 1 ] \"integer\" # Output Environment: int [1:3] 1 2 3 (Int vector, with 3 values) R is dynamically typed. Note that an identifier like x is actually just a pointer to an object and if you change the thing it\u2019s pointing to, it changes it\u2019s type. A vector is a sequence of objects of the same type. The c() function we saw above will combine the objects into a vector. If we try and combine objects of different types, we will see that R coerces all the objects to be of the most inclusive type x <- c ( 1L , 1.2 , \"hi\" ) typeof ( x ) [ 1 ] \"character\" # Output Environment: chr [1:3] \"1\" \"1.2\" \"hi\" Another way to create vectors is using a sequence operator, the colon : . x <- 1 : 10 [ 1 ] 1 2 3 4 5 6 7 8 9 10 # Output The above code produces a vector, of the numbers between 1 and 10 (in sequence). If we multiply this vector by 5 we will see every element of the vector multiply. x * 5 [ 1 ] 5 10 15 20 25 30 35 40 45 50 # Output In normal code we would write a loop, but R was written for statistics. We also have: sum() min() max() mean() range() median() We can also use logical vectors. x > 5 [ 1 ] FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE TRUE # Output We can then sum those vectors sum ( x > 5 ) [ 1 ] 5 # Output Knowing all this we may try a more complicated expression: x [ x < 5 ] <- 0 The brackets above selects all elements less than 5, then the right replaces them with 0. Vector Example \u00b6 Now for a shocker: R indexes arrays at 1, meaning we have some boundries to learn: > x <- 1 : 10 > x [ 1 ] 1 2 3 4 5 6 7 8 9 10 > x [ 1 ] [ 1 ] 1 > x [ 0 ] integer ( 0 ) > x [ 11 ] [ 1 ] NA Vectors start at 1 If you index out of bounds, you don\u2019t get an error Index [0] seems to store some info about the vector List Example \u00b6 A list is a sequence of objects of varied types. Lists can also hold lists as elements > x <- list ( 'a' , 1.2 , TRUE , 5 ) > x [[ 1 ]] [ 1 ] \"a\" > length ( x ) [ 1 ] 4 To index into a list you use double brackets Matrix Example \u00b6 A matrix is a 2D object with elements of the same type An array is like a matrix but can have more than 2 dimensions Basically a matrix is just 2D, while arrays can be defined with more dimensions > m <- matrix ( 1 : 10 , nrow = 2 ) > m [, 1 ] [, 2 ] [, 3 ] [, 4 ] [, 5 ] [ 1 ,] 1 3 5 7 9 [ 2 ,] 2 4 6 8 10 > m [ 2 , 3 ] [ 1 ] 6 Also note that indexing of matrices are in row column order. Dataframe Example \u00b6 A data frame is a 2d structure where each column can be of a different type > x <- c ( 1 : 3 ) > y <- c ( 1.1 , 2.2 , 3.3 ) > z <- c ( 'a' , 'b' , 'c' ) > df <- data.frame ( cbind ( x , y , z )) > df x y z 1 1 1.1 a 2 2 2.2 b 3 3 3.3 c Most of the time we will read in a dataframe, but they can be constructed manually. In the case above using vectors and the cbind() operator. We can access a given column with the $ operator. As well as change the names of the columns. > df $ x [ 1 ] \"1\" \"2\" \"3\" > colnames ( df ) <- c ( 'Ticket' , 'Discount' , 'Section' ) > df Ticket Discount Section 1 1 1.1 a 2 2 2.2 b 3 3 3.3 c Reading Structures \u00b6 getwd() returns the defualt directory setwd() sets the default directory read.csv() is used to read in a data frame str() is the structure command > getwd () [ 1 ] \"C:/Users/ZaiquiriW/Documents\" > setwd ( 'C:/Users/ZaiquiriW/Documents/Fall2022/fall-2022/machine-learning/r-directory' ) > df <- read.csv ( \"titanic.csv\" ) > str ( df ) Working With Environment \u00b6 We can list all the values in the environment with ls() , and we can remove them with rm(list=ls()) . That means we have nothing in that environment Datasets \u00b6 R has a lot of built in data sets we can list with data() . To bring a data set into working memory we use data(\"airquality\") which we can learn more about using ?airquality . Then if we want to then work with that dataset we simply: > df <- airquality [] > rm ( airquality ) Note that we removed the original dataset in memory to save space If we want to explore those data sets we have: head() which returns the start of the data, we may pass how many rows/observations tail() which returns the end of the data, we may pass how mnay rows/observations dim() returns the size of the data (row and columns) str() shows the structure of the data summary(df) gives statistical info about each column Removing NAs \u00b6 Datasets like airquality above often have missing data that can lead to problems with your code. First we can quantify how many NAs we have > sum ( is.na ( df $ Ozone )) [ 1 ] 37 The above line takes the column/attribute ozone, and checks if it is NA (returning a boolean value). Then it sums the number of TRUE results from that test. In the dataset then, there are 37 NAs A problem that can occur if we try and find statistics on a column with NAs, like finding the mean of a column with NAs. We would then want to ignore them. > mean ( df $ Ozone ) [ 1 ] NA > mean ( df $ Ozone , na.rm = TRUE ) [ 1 ] 42.12931 This is an assumption about what the data means however. What if the value for NA had some sort of value we could assume for NA. Like the mean we found above? > m <- mean ( df $ Ozone , na.rm = TRUE ) > df & Ozone [ is.na ( df $ Ozone )] <- m > mean ( df & Ozone ) [ 1 ] 42.12931 Visual Analysis \u00b6 If we want to look at our data visually we may try and use the built in graphing functions hist(df&Temp) - Creates a historam of temperatures plot(df$Temp) - Now we see all the temperatures on a scatterplot plot(df$Temp, df$Ozone) - Shows us a scatter plot with temperature on the X axis and Ozone on the Y axis of a scatterplot. plot(df$Temp, df$Ozone, pch=16, col=\"blue\", cex=1.5, main=\"Airquality\", xlab=Ozone\", ylab=\"Temperature\") - Modifies the graph to be much more visually appealing Correlation \u00b6 Correlation is the factor that tells us how much one variable goes up or down in relation to another. Correlations range from +1 to -1, and corrrelations near +/-1 indicate strong correlations while correlations near 0 indicate no correlation. > cor ( df [ 1 : 4 ], use = \"complete\" ) Ozone Solar.R Wind Temp Ozone 1.0000000 0.3483417 -0.6124966 0.6985414 Solar.R 0.3483417 1.0000000 -0.1271835 0.2940876 Wind -0.6124966 -0.1271835 1.0000000 -0.4971897 Temp 0.6985414 0.2940876 -0.4971897 1.0000000 > pairs ( df [ 1 : 4 ]) The pairs function at the end their gives us a graph plotting each attribute/column with every other attribute/column. The label of a column is the x axis for each graph in its column. While the label of a row is the y axis for each graph in it\u2019s row. Thus you can see in the lower left corner that as Ozone goes up (X axis), the Temperature (Y axis) goes up. Meaning there is a positive correlation from Ozone to Temperature. I\u2019m at least.. half sure of this. Factors \u00b6 > df $ Hot <- FALSE > df $ Hot [ df $ Temp > 89 ] <- TRUE > df $ Hot <- factor ( df $ Hot ) > str ( df ) The code above: Creates a new column/attribute Hot, and assigns all it\u2019s values to FALSE Then for row in HOT where Temp>89, it sets HOT to TRUE. Then it factors it\u2026 a factor is a qualitative variable that takes on only one of set of values . Because the Hot value is only either TRUE or FALSE, it can enumerate them, or store them as integers referencing the set of values !!! Lecture Notes !!! Conditional Density Plot: cdplot () \\install(\u201cpackage\u201d) require(package) returns a boolean if it loaded NOTEBOOKS \u00b6 As someone who set up Jupyter in the past for Python, I\u2019m pretty interested in this. File, New File, and selecting R Notebook updated the Studio for me to be able use them. Because I already understand how these works, it really is just a matter of figureing out how I want to interwieve my usage of Obsidian with R notebook. Really it should be as simple as having a link to a R notebook file ( .rmd ) and opening it. default-notebook.Rmd opens RStudio, but unfortunately there really isn\u2019t a way to open it inside of Obsidian. There is a Jupyter Plugin which allows an obsidian note to access a Python interpreter/kernel but I don\u2019t know if it is worth modding into Obsidian. However, RStudio does have a live preview mode of their notebook editor that mirrors the functionallity of obsidian. This means I have to come to a conclusion: Write all of my notes in Obsidian to utilize the easy linking of the software Write all of my notes in RStudio and utilize the ability to write code in live preview Do all of my notes in Obsidian and RStudio, referencing between the too\u2026 I don\u2019t like any of these. First I tried out the obsidian-jupyter plugin, and saw their was a pull request from 8 months ago that added support for arbitrary kernel/language support I saw version required you to install the kernel before hand, so I installed IRkernel via these instructions Now I need to figure out how to set up an Obsidian Dev environment so I can build the plguin with the changes neccessary for arbitary kernel support. Something I have done in the past, but not understood.","title":"2: Learning R"},{"location":"hidden/ml02-learning-r/#2-learning-r","text":"Links Youtube Video Github R Homepage","title":"2: Learning R"},{"location":"hidden/ml02-learning-r/#tldr","text":"","title":"TLDR;"},{"location":"hidden/ml02-learning-r/#setting-up-r","text":"Head to R Homepage to get a little background about R. An Open source alternative to the S langauge developed at Bell Labs. Click on CRAN I used this mirror Run the installer for your system Installed at C:\\Program Files\\R\\R-4.2.1 Used Defaults Then download RStudio and open it (She was specific that it was in this order) Installed at C:\\Program Files\\RStudio Open the software and get ready to go!","title":"Setting Up R"},{"location":"hidden/ml02-learning-r/#using-rstudio","text":"This section uses Chapter 2 of \u201cMachine Learning Handbook: Using R and Python\u201d, the chapter can be found at http://karenmazidi.blogspot.com/ , however I am going to get the book real fast\u2026 I went ahead and bought the paper back! R is an interpreted language, which means we can easily get to know it in the console.","title":"Using RStudio"},{"location":"hidden/ml02-learning-r/#fast-track-on-typing","text":"3 + 4 - 1 * 8 / 2 [ 1 ] 3 # Output While it does follow the normal order of operations, and returns as expected, note that that [1] is telling you the dimension of what is returned. There aren\u2019t Scalars in R, and the 3 returned is just a vector of length 1 If we were to save the result to a variable (note the assignment operator is commonly <- ) we would see it in the environment tab. The Assignment operator could be = , but <- is preferred. She notes assignment is bidirectional but I\u2019m not sure what that means, check here . x <- 3 + 4 - 1 * 8 / 2 [ 1 ] 3 # Output In the environment we can now see x , and it looks like an integer. But if we use the type of function typeof ( x ) [ 1 ] \"double\" # Output We can see that numbers are by default stored as doubles. We can instead store things as an integer using L : x <- c ( 1L , 2L , 3L ) typeof ( x ) [ 1 ] \"integer\" # Output Environment: int [1:3] 1 2 3 (Int vector, with 3 values) R is dynamically typed. Note that an identifier like x is actually just a pointer to an object and if you change the thing it\u2019s pointing to, it changes it\u2019s type. A vector is a sequence of objects of the same type. The c() function we saw above will combine the objects into a vector. If we try and combine objects of different types, we will see that R coerces all the objects to be of the most inclusive type x <- c ( 1L , 1.2 , \"hi\" ) typeof ( x ) [ 1 ] \"character\" # Output Environment: chr [1:3] \"1\" \"1.2\" \"hi\" Another way to create vectors is using a sequence operator, the colon : . x <- 1 : 10 [ 1 ] 1 2 3 4 5 6 7 8 9 10 # Output The above code produces a vector, of the numbers between 1 and 10 (in sequence). If we multiply this vector by 5 we will see every element of the vector multiply. x * 5 [ 1 ] 5 10 15 20 25 30 35 40 45 50 # Output In normal code we would write a loop, but R was written for statistics. We also have: sum() min() max() mean() range() median() We can also use logical vectors. x > 5 [ 1 ] FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE TRUE # Output We can then sum those vectors sum ( x > 5 ) [ 1 ] 5 # Output Knowing all this we may try a more complicated expression: x [ x < 5 ] <- 0 The brackets above selects all elements less than 5, then the right replaces them with 0.","title":"Fast Track on Typing"},{"location":"hidden/ml02-learning-r/#vector-example","text":"Now for a shocker: R indexes arrays at 1, meaning we have some boundries to learn: > x <- 1 : 10 > x [ 1 ] 1 2 3 4 5 6 7 8 9 10 > x [ 1 ] [ 1 ] 1 > x [ 0 ] integer ( 0 ) > x [ 11 ] [ 1 ] NA Vectors start at 1 If you index out of bounds, you don\u2019t get an error Index [0] seems to store some info about the vector","title":"Vector Example"},{"location":"hidden/ml02-learning-r/#list-example","text":"A list is a sequence of objects of varied types. Lists can also hold lists as elements > x <- list ( 'a' , 1.2 , TRUE , 5 ) > x [[ 1 ]] [ 1 ] \"a\" > length ( x ) [ 1 ] 4 To index into a list you use double brackets","title":"List Example"},{"location":"hidden/ml02-learning-r/#matrix-example","text":"A matrix is a 2D object with elements of the same type An array is like a matrix but can have more than 2 dimensions Basically a matrix is just 2D, while arrays can be defined with more dimensions > m <- matrix ( 1 : 10 , nrow = 2 ) > m [, 1 ] [, 2 ] [, 3 ] [, 4 ] [, 5 ] [ 1 ,] 1 3 5 7 9 [ 2 ,] 2 4 6 8 10 > m [ 2 , 3 ] [ 1 ] 6 Also note that indexing of matrices are in row column order.","title":"Matrix Example"},{"location":"hidden/ml02-learning-r/#dataframe-example","text":"A data frame is a 2d structure where each column can be of a different type > x <- c ( 1 : 3 ) > y <- c ( 1.1 , 2.2 , 3.3 ) > z <- c ( 'a' , 'b' , 'c' ) > df <- data.frame ( cbind ( x , y , z )) > df x y z 1 1 1.1 a 2 2 2.2 b 3 3 3.3 c Most of the time we will read in a dataframe, but they can be constructed manually. In the case above using vectors and the cbind() operator. We can access a given column with the $ operator. As well as change the names of the columns. > df $ x [ 1 ] \"1\" \"2\" \"3\" > colnames ( df ) <- c ( 'Ticket' , 'Discount' , 'Section' ) > df Ticket Discount Section 1 1 1.1 a 2 2 2.2 b 3 3 3.3 c","title":"Dataframe Example"},{"location":"hidden/ml02-learning-r/#reading-structures","text":"getwd() returns the defualt directory setwd() sets the default directory read.csv() is used to read in a data frame str() is the structure command > getwd () [ 1 ] \"C:/Users/ZaiquiriW/Documents\" > setwd ( 'C:/Users/ZaiquiriW/Documents/Fall2022/fall-2022/machine-learning/r-directory' ) > df <- read.csv ( \"titanic.csv\" ) > str ( df )","title":"Reading Structures"},{"location":"hidden/ml02-learning-r/#working-with-environment","text":"We can list all the values in the environment with ls() , and we can remove them with rm(list=ls()) . That means we have nothing in that environment","title":"Working With Environment"},{"location":"hidden/ml02-learning-r/#datasets","text":"R has a lot of built in data sets we can list with data() . To bring a data set into working memory we use data(\"airquality\") which we can learn more about using ?airquality . Then if we want to then work with that dataset we simply: > df <- airquality [] > rm ( airquality ) Note that we removed the original dataset in memory to save space If we want to explore those data sets we have: head() which returns the start of the data, we may pass how many rows/observations tail() which returns the end of the data, we may pass how mnay rows/observations dim() returns the size of the data (row and columns) str() shows the structure of the data summary(df) gives statistical info about each column","title":"Datasets"},{"location":"hidden/ml02-learning-r/#removing-nas","text":"Datasets like airquality above often have missing data that can lead to problems with your code. First we can quantify how many NAs we have > sum ( is.na ( df $ Ozone )) [ 1 ] 37 The above line takes the column/attribute ozone, and checks if it is NA (returning a boolean value). Then it sums the number of TRUE results from that test. In the dataset then, there are 37 NAs A problem that can occur if we try and find statistics on a column with NAs, like finding the mean of a column with NAs. We would then want to ignore them. > mean ( df $ Ozone ) [ 1 ] NA > mean ( df $ Ozone , na.rm = TRUE ) [ 1 ] 42.12931 This is an assumption about what the data means however. What if the value for NA had some sort of value we could assume for NA. Like the mean we found above? > m <- mean ( df $ Ozone , na.rm = TRUE ) > df & Ozone [ is.na ( df $ Ozone )] <- m > mean ( df & Ozone ) [ 1 ] 42.12931","title":"Removing NAs"},{"location":"hidden/ml02-learning-r/#visual-analysis","text":"If we want to look at our data visually we may try and use the built in graphing functions hist(df&Temp) - Creates a historam of temperatures plot(df$Temp) - Now we see all the temperatures on a scatterplot plot(df$Temp, df$Ozone) - Shows us a scatter plot with temperature on the X axis and Ozone on the Y axis of a scatterplot. plot(df$Temp, df$Ozone, pch=16, col=\"blue\", cex=1.5, main=\"Airquality\", xlab=Ozone\", ylab=\"Temperature\") - Modifies the graph to be much more visually appealing","title":"Visual Analysis"},{"location":"hidden/ml02-learning-r/#correlation","text":"Correlation is the factor that tells us how much one variable goes up or down in relation to another. Correlations range from +1 to -1, and corrrelations near +/-1 indicate strong correlations while correlations near 0 indicate no correlation. > cor ( df [ 1 : 4 ], use = \"complete\" ) Ozone Solar.R Wind Temp Ozone 1.0000000 0.3483417 -0.6124966 0.6985414 Solar.R 0.3483417 1.0000000 -0.1271835 0.2940876 Wind -0.6124966 -0.1271835 1.0000000 -0.4971897 Temp 0.6985414 0.2940876 -0.4971897 1.0000000 > pairs ( df [ 1 : 4 ]) The pairs function at the end their gives us a graph plotting each attribute/column with every other attribute/column. The label of a column is the x axis for each graph in its column. While the label of a row is the y axis for each graph in it\u2019s row. Thus you can see in the lower left corner that as Ozone goes up (X axis), the Temperature (Y axis) goes up. Meaning there is a positive correlation from Ozone to Temperature. I\u2019m at least.. half sure of this.","title":"Correlation"},{"location":"hidden/ml02-learning-r/#factors","text":"> df $ Hot <- FALSE > df $ Hot [ df $ Temp > 89 ] <- TRUE > df $ Hot <- factor ( df $ Hot ) > str ( df ) The code above: Creates a new column/attribute Hot, and assigns all it\u2019s values to FALSE Then for row in HOT where Temp>89, it sets HOT to TRUE. Then it factors it\u2026 a factor is a qualitative variable that takes on only one of set of values . Because the Hot value is only either TRUE or FALSE, it can enumerate them, or store them as integers referencing the set of values !!! Lecture Notes !!! Conditional Density Plot: cdplot () \\install(\u201cpackage\u201d) require(package) returns a boolean if it loaded","title":"Factors"},{"location":"hidden/ml02-learning-r/#notebooks","text":"As someone who set up Jupyter in the past for Python, I\u2019m pretty interested in this. File, New File, and selecting R Notebook updated the Studio for me to be able use them. Because I already understand how these works, it really is just a matter of figureing out how I want to interwieve my usage of Obsidian with R notebook. Really it should be as simple as having a link to a R notebook file ( .rmd ) and opening it. default-notebook.Rmd opens RStudio, but unfortunately there really isn\u2019t a way to open it inside of Obsidian. There is a Jupyter Plugin which allows an obsidian note to access a Python interpreter/kernel but I don\u2019t know if it is worth modding into Obsidian. However, RStudio does have a live preview mode of their notebook editor that mirrors the functionallity of obsidian. This means I have to come to a conclusion: Write all of my notes in Obsidian to utilize the easy linking of the software Write all of my notes in RStudio and utilize the ability to write code in live preview Do all of my notes in Obsidian and RStudio, referencing between the too\u2026 I don\u2019t like any of these. First I tried out the obsidian-jupyter plugin, and saw their was a pull request from 8 months ago that added support for arbitrary kernel/language support I saw version required you to install the kernel before hand, so I installed IRkernel via these instructions Now I need to figure out how to set up an Obsidian Dev environment so I can build the plguin with the changes neccessary for arbitary kernel support. Something I have done in the past, but not understood.","title":"NOTEBOOKS"},{"location":"ml-notes/","text":"Machine Learning Notes \u00b6 This is where I\u2019ll be posting all of my notes pertaining to Machine Learning (That I think are worth sharing)","title":"Machine Learning Notes"},{"location":"ml-notes/#machine-learning-notes","text":"This is where I\u2019ll be posting all of my notes pertaining to Machine Learning (That I think are worth sharing)","title":"Machine Learning Notes"},{"location":"ml-notes/Chapter%201%20Video%20Notes/","text":"1: Introduction \u00b6 Links Youtube Video Github TIOBE Reference Uses for Machine Learning \u00b6 Some key areas are: Computer Vision Natural Language Processesing (NLP) like spam detection Customer Segmentation for market research Data Analysis for things like credit fraud detection What is it? \u00b6 Machine Learning is the intersection between A.I., Statistics, Probability, and CS. Mazidi\u2019s definition is: Machine Learning trains computers to accurately recognize patters in data for data anylysis, prediction, and action selection by autonomous agents. Note that we must note some meanings: What accuracy is good enough How do we ethically use data Computers are better at recognizing some patterns Uses \u00b6 Data Analysis : Sometimes we just want to understand data, like with clustering algorithms Prediction : Sometimes we want to predict outcomes on new data Action Action Selection by Autonomous Agents : The field of reenforcemnet learning trains autonomous agents often with deep learning and huge amounts of data Subcategories \u00b6 We can divide it into two large categories: Active Learning on the right, and Informative Learning on the left. The main field is the left, where how: Supervised Learning is deciding \\(y\\) based on \\(x\\) . Unsupervised Learning is learning without a specified target We further divide Supervised Learning into: Regression : Where the target is a real number like a selling price Classification : Where the target is membership in a set of classes like a binary calssifacation of credit risk Do We Need It? \u00b6 We first usually come up with an algorithm that produces an output given an input. It is very deterministic. This usually works for normal applicaitons, like payroll. It just automates it. However, we can\u2019t solve problems with a bunch of rules. Like facial recognition. Instead we give a computer input, and give it an algorithm that produces a model for reading faces. Machine learning\u2019s advantage is going through data quicker than any human could. And we have many algorithms that produce models of patterns they can reconize Terminology \u00b6 ML grew out of math and science, so we see a lot of duplicate terminology. Like a table representing data: A row might be an example , instance , or observation A column might be an attribute , or feature In supervised learning , we select a target column, while the rest are predictors . Data can be quantitative and numeric , or qualitative , categorical , and factors . The GPA, Hours, SAT Score above are numeric Class membership is encoded given some quantitative term Challenges for Society \u00b6 What is the legal precedence of bad machine learning models Are algorithms fair? They can learn prejudice like in judicial sentencing There are security issues There are privacy issues, as privacy issues vary by country And AI Hype: Notes on Learning M.L. \u00b6 Be systematic Have a plan for learning Keep a notebook Find Mentors! Like in your organization Online Do Reproducible Research Take notes on your work Document, Document, Document Here is an example workflow: Note that the green boxes are for management, the yellow boxes are for data wrangling, and the blue boxes are for machine learning. All of these steps take various teams with various fields of research Our Workflow \u00b6 We explore the data, Perform machine learning on the data Evaluate the results This is with the goal of learningg algorithms R and Python \u00b6 In the TIOBE Index (May 2020), Python was 3rd, while R was 10th. It was simply a measure of popularity. We shall learn the purely statistical language R first, then move on to python. More \u00b6 All of this content is further explored in ml-chapter-1 and tested on ml-quiz-1","title":"Chapter 1 Video Notes"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#1-introduction","text":"Links Youtube Video Github TIOBE Reference","title":"1: Introduction"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#uses-for-machine-learning","text":"Some key areas are: Computer Vision Natural Language Processesing (NLP) like spam detection Customer Segmentation for market research Data Analysis for things like credit fraud detection","title":"Uses for Machine Learning"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#what-is-it","text":"Machine Learning is the intersection between A.I., Statistics, Probability, and CS. Mazidi\u2019s definition is: Machine Learning trains computers to accurately recognize patters in data for data anylysis, prediction, and action selection by autonomous agents. Note that we must note some meanings: What accuracy is good enough How do we ethically use data Computers are better at recognizing some patterns","title":"What is it?"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#uses","text":"Data Analysis : Sometimes we just want to understand data, like with clustering algorithms Prediction : Sometimes we want to predict outcomes on new data Action Action Selection by Autonomous Agents : The field of reenforcemnet learning trains autonomous agents often with deep learning and huge amounts of data","title":"Uses"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#subcategories","text":"We can divide it into two large categories: Active Learning on the right, and Informative Learning on the left. The main field is the left, where how: Supervised Learning is deciding \\(y\\) based on \\(x\\) . Unsupervised Learning is learning without a specified target We further divide Supervised Learning into: Regression : Where the target is a real number like a selling price Classification : Where the target is membership in a set of classes like a binary calssifacation of credit risk","title":"Subcategories"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#do-we-need-it","text":"We first usually come up with an algorithm that produces an output given an input. It is very deterministic. This usually works for normal applicaitons, like payroll. It just automates it. However, we can\u2019t solve problems with a bunch of rules. Like facial recognition. Instead we give a computer input, and give it an algorithm that produces a model for reading faces. Machine learning\u2019s advantage is going through data quicker than any human could. And we have many algorithms that produce models of patterns they can reconize","title":"Do We Need It?"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#terminology","text":"ML grew out of math and science, so we see a lot of duplicate terminology. Like a table representing data: A row might be an example , instance , or observation A column might be an attribute , or feature In supervised learning , we select a target column, while the rest are predictors . Data can be quantitative and numeric , or qualitative , categorical , and factors . The GPA, Hours, SAT Score above are numeric Class membership is encoded given some quantitative term","title":"Terminology"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#challenges-for-society","text":"What is the legal precedence of bad machine learning models Are algorithms fair? They can learn prejudice like in judicial sentencing There are security issues There are privacy issues, as privacy issues vary by country And AI Hype:","title":"Challenges for Society"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#notes-on-learning-ml","text":"Be systematic Have a plan for learning Keep a notebook Find Mentors! Like in your organization Online Do Reproducible Research Take notes on your work Document, Document, Document Here is an example workflow: Note that the green boxes are for management, the yellow boxes are for data wrangling, and the blue boxes are for machine learning. All of these steps take various teams with various fields of research","title":"Notes on Learning M.L."},{"location":"ml-notes/Chapter%201%20Video%20Notes/#our-workflow","text":"We explore the data, Perform machine learning on the data Evaluate the results This is with the goal of learningg algorithms","title":"Our Workflow"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#r-and-python","text":"In the TIOBE Index (May 2020), Python was 3rd, while R was 10th. It was simply a measure of popularity. We shall learn the purely statistical language R first, then move on to python.","title":"R and Python"},{"location":"ml-notes/Chapter%201%20Video%20Notes/#more","text":"All of this content is further explored in ml-chapter-1 and tested on ml-quiz-1","title":"More"},{"location":"ml-notes/ml-chapter-1/","text":"Chapter 1: Introduction \u00b6 Machine Learning \u00b6 Definition 1.1.1: Machine Learning : trains computers to accurately recognize patterns in data for purposes of data analysis, prediction, and/or action selection by autonomous agents The definition requires elaborations on certain terms: Data: We must both consider the ethics behind the data we use, and how organized it may be Quiz Revision : Clustering is referenced in this section as an unsupervised method to group like instances Patterns: Computers can beat humans at recognizing patterns, but we must be the ones to organize the data. Predictions from Data: We can train algorithms on a portion of the data, and test it on the remaining data. They can learn from data over time as well Accuracy: That\u2019s the rub, we have to be accurate to some baseline. If our data says 99%, then we want to beat a baseline of 99%. Actions: Autonomous agents, or things like smart thermostats or assistants, take actions based on what they have learned, the end goal of a lot of ML Machine Learning Scenarios \u00b6 Machine learning can be divided into into different classes Informative v. Active \u00b6 Informative algorithms are most algorithms looked at in this book. they input data observations and output a model of the data that can be used to predict outcomes for a new data data fed into the model. Active agents are taught by reinforcement learning to identify optimal actions given the current environment based on learned passed experience. They might keep learning with sensors or inputs Supervised v. Unsupervised Learning \u00b6 The informative algorithms are of these two types. Supervised Learning refers to scenarios where each data instance has a label. This label is used to train the algorithm so the labels can be predicted in the future. however Unsupervised Learning refers to scenarios where data does not have labels and the goal is just learning. Regression v. Classification \u00b6 In Regression the target is a real-numbered Quantitative value, like trying to predict the market value of a home given its square footage. Classification means the target is Qualitive a class like predicting if a borrower is a good credit risk or not. Machine Learning v. Traditional Algo \u00b6 Instead of processing input data with an algorithm, we train an algorithm that outputs a model to handle the problem. Some reasons for this are: There are complex problems that humans may be able to solve, but we couldn\u2019t just program a computer to solve them. Instead we let the computer process all the fine details The problem\u2019s scale could be massive! Just letting a computer do the job saves man hours Terminology \u00b6 There are a lot of terms for the same thing in machine learning. GPA Hours SAT Class 3.2 15 1450 Junior 3.8 21 1420 Sophomore 2.5 9 1367 Freshman Given the data above, we have rows and columns with different names: Rows are also known as instances , examples , and observations . Columns are known as attributes or features and predictors . The data is also two types of values. Quantitative values are numerical while Qualitative values only take on a set of finite values. Those features are called Factors or Categorical Data . If we want to learn about one of the attributes or features, it is our Target or Response while the other data we use to predict that fact could be our Features or Predictors . Notation \u00b6 \\(x_i\\) subscript \\(i\\) indexes observations in a data set; \\(i\\) ranges from \\(1\\) to \\(N\\) , the number of observations (rows) in the data set. \\(x_{i,j}\\) subscript \\(j\\) indexes predictors in a data set; \\(j\\) ranges from \\(1\\) to \\(P\\) , the number of predictors (columns) in the data set. Here we are referencing predictor \\(j\\) from observation \\(i\\) . In matrix notation, lower case letters like \\(x\\) represent vectors, and upper case bold face letters like \\(X\\) represent matrices. file.inlinks ml01-the-craft-of-machine-learning ml-quiz-1 ml-study-guide","title":"Chapter 1: Introduction"},{"location":"ml-notes/ml-chapter-1/#chapter-1-introduction","text":"","title":"Chapter 1: Introduction"},{"location":"ml-notes/ml-chapter-1/#machine-learning","text":"Definition 1.1.1: Machine Learning : trains computers to accurately recognize patterns in data for purposes of data analysis, prediction, and/or action selection by autonomous agents The definition requires elaborations on certain terms: Data: We must both consider the ethics behind the data we use, and how organized it may be Quiz Revision : Clustering is referenced in this section as an unsupervised method to group like instances Patterns: Computers can beat humans at recognizing patterns, but we must be the ones to organize the data. Predictions from Data: We can train algorithms on a portion of the data, and test it on the remaining data. They can learn from data over time as well Accuracy: That\u2019s the rub, we have to be accurate to some baseline. If our data says 99%, then we want to beat a baseline of 99%. Actions: Autonomous agents, or things like smart thermostats or assistants, take actions based on what they have learned, the end goal of a lot of ML","title":"Machine Learning"},{"location":"ml-notes/ml-chapter-1/#machine-learning-scenarios","text":"Machine learning can be divided into into different classes","title":"Machine Learning Scenarios"},{"location":"ml-notes/ml-chapter-1/#informative-v-active","text":"Informative algorithms are most algorithms looked at in this book. they input data observations and output a model of the data that can be used to predict outcomes for a new data data fed into the model. Active agents are taught by reinforcement learning to identify optimal actions given the current environment based on learned passed experience. They might keep learning with sensors or inputs","title":"Informative v. Active"},{"location":"ml-notes/ml-chapter-1/#supervised-v-unsupervised-learning","text":"The informative algorithms are of these two types. Supervised Learning refers to scenarios where each data instance has a label. This label is used to train the algorithm so the labels can be predicted in the future. however Unsupervised Learning refers to scenarios where data does not have labels and the goal is just learning.","title":"Supervised v. Unsupervised Learning"},{"location":"ml-notes/ml-chapter-1/#regression-v-classification","text":"In Regression the target is a real-numbered Quantitative value, like trying to predict the market value of a home given its square footage. Classification means the target is Qualitive a class like predicting if a borrower is a good credit risk or not.","title":"Regression v. Classification"},{"location":"ml-notes/ml-chapter-1/#machine-learning-v-traditional-algo","text":"Instead of processing input data with an algorithm, we train an algorithm that outputs a model to handle the problem. Some reasons for this are: There are complex problems that humans may be able to solve, but we couldn\u2019t just program a computer to solve them. Instead we let the computer process all the fine details The problem\u2019s scale could be massive! Just letting a computer do the job saves man hours","title":"Machine Learning v. Traditional Algo"},{"location":"ml-notes/ml-chapter-1/#terminology","text":"There are a lot of terms for the same thing in machine learning. GPA Hours SAT Class 3.2 15 1450 Junior 3.8 21 1420 Sophomore 2.5 9 1367 Freshman Given the data above, we have rows and columns with different names: Rows are also known as instances , examples , and observations . Columns are known as attributes or features and predictors . The data is also two types of values. Quantitative values are numerical while Qualitative values only take on a set of finite values. Those features are called Factors or Categorical Data . If we want to learn about one of the attributes or features, it is our Target or Response while the other data we use to predict that fact could be our Features or Predictors .","title":"Terminology"},{"location":"ml-notes/ml-chapter-1/#notation","text":"\\(x_i\\) subscript \\(i\\) indexes observations in a data set; \\(i\\) ranges from \\(1\\) to \\(N\\) , the number of observations (rows) in the data set. \\(x_{i,j}\\) subscript \\(j\\) indexes predictors in a data set; \\(j\\) ranges from \\(1\\) to \\(P\\) , the number of predictors (columns) in the data set. Here we are referencing predictor \\(j\\) from observation \\(i\\) . In matrix notation, lower case letters like \\(x\\) represent vectors, and upper case bold face letters like \\(X\\) represent matrices. file.inlinks ml01-the-craft-of-machine-learning ml-quiz-1 ml-study-guide","title":"Notation"},{"location":"ml-notes/ml-quiz-1/","text":"Quiz 1: Chapter 1 Introduction \u00b6 Source All answers found inside of Machine Learning Handbook by Karen Mazidi Refernce ml-chapter-1 for more Q&A \u00b6 Q: Reinforcement learning is a form of supervised learning: A: False! Supervised learning is informative while reinforcement learning is Active! p24 Q: Reinforcement learning is a form of unsupervised learning: A: False Unsupervised learning is informative while reinforcement learning is Active! p24 Q: This term refers to a type of machine learning in which the target is a quantitative variable: A: regression ! \u201cLike trying to predict the market value of a home given its square footage and other data\u201d p25 Q: This term refers to a type of machine learning in which the target is a qualitative variable: A: classification ! \u201cPredicting if a borrower is a good credit risk or not, given their income\u201d etc. p25 Q: Clustering is an example of this type of machine learning: A: Unsupervised Learning \u201cOne learning scenario, clustering, seeks to group like instances. Another learning scenario, supervised learning\u2026\u201d p22 (Meaning it is not supervised) Q: In this type of learning, one column is the target and all other columns are predictors: A: Supervised \u201csupervised learning refers to scenarios where each data instance has a label. This label is used to train the algorithm so that labels can be predicted for future data items.\u201d p25 . In both Regression and Classification, the target is called, well a target, so it\u2019s safe to bet their superset is the answer Q: Another term for a qualitative column is a factor or ___ data: A: categorical \u201cQualitative features are also called factors or categorical data\u201d p26 Q: A column can be called a feature or a(n): A: attribute \u201cEach column in the table is an attribute, also called a feature or predictor\u201d p26 Q: Another term for a row in a data set is a(n): A: observation \u201cEach row is a sample data point, also called an example, instance, or observation\u201d p26 Q: Another term for a target is a(n): A: response \u201cIf we want to learn GPA as a function of the other 3 features, we say that GPA is our target\u201d p26","title":"Quiz 1: Chapter 1 Introduction"},{"location":"ml-notes/ml-quiz-1/#quiz-1-chapter-1-introduction","text":"Source All answers found inside of Machine Learning Handbook by Karen Mazidi Refernce ml-chapter-1 for more","title":"Quiz 1: Chapter 1 Introduction"},{"location":"ml-notes/ml-quiz-1/#qa","text":"Q: Reinforcement learning is a form of supervised learning: A: False! Supervised learning is informative while reinforcement learning is Active! p24 Q: Reinforcement learning is a form of unsupervised learning: A: False Unsupervised learning is informative while reinforcement learning is Active! p24 Q: This term refers to a type of machine learning in which the target is a quantitative variable: A: regression ! \u201cLike trying to predict the market value of a home given its square footage and other data\u201d p25 Q: This term refers to a type of machine learning in which the target is a qualitative variable: A: classification ! \u201cPredicting if a borrower is a good credit risk or not, given their income\u201d etc. p25 Q: Clustering is an example of this type of machine learning: A: Unsupervised Learning \u201cOne learning scenario, clustering, seeks to group like instances. Another learning scenario, supervised learning\u2026\u201d p22 (Meaning it is not supervised) Q: In this type of learning, one column is the target and all other columns are predictors: A: Supervised \u201csupervised learning refers to scenarios where each data instance has a label. This label is used to train the algorithm so that labels can be predicted for future data items.\u201d p25 . In both Regression and Classification, the target is called, well a target, so it\u2019s safe to bet their superset is the answer Q: Another term for a qualitative column is a factor or ___ data: A: categorical \u201cQualitative features are also called factors or categorical data\u201d p26 Q: A column can be called a feature or a(n): A: attribute \u201cEach column in the table is an attribute, also called a feature or predictor\u201d p26 Q: Another term for a row in a data set is a(n): A: observation \u201cEach row is a sample data point, also called an example, instance, or observation\u201d p26 Q: Another term for a target is a(n): A: response \u201cIf we want to learn GPA as a function of the other 3 features, we say that GPA is our target\u201d p26","title":"Q&amp;A"}]}